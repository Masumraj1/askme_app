import 'package:askme/app/global/helper/extension.dart';
import 'package:askme/app/view/screens/bonus/bonus_screen.dart';
import 'package:askme/app/view/screens/dart/dart_screen.dart';
import 'package:askme/app/view/screens/flutter/flutter_screen.dart';
import 'package:askme/app/view/screens/splash_screen/splash_screen.dart';
import 'package:askme/app/view/screens/state_managment/state_managment_screen.dart';
import 'package:flutter/cupertino.dart';
import 'package:go_router/go_router.dart';

import 'route_path.dart';

class AppRouter {
  static final GoRouter initRoute = GoRouter(
      initialLocation: RoutePath.splashScreen.addBasePath,
      debugLogDiagnostics: true,
      navigatorKey: GlobalKey<NavigatorState>(),
      routes: [
        ///======================= Initial Route =======================

        GoRoute(
          name: RoutePath.splashScreen,
          path: RoutePath.splashScreen.addBasePath,
          pageBuilder: (context, state) => _buildPageWithAnimation(
            child: SplashScreen(),
            state: state,
          ),
        ),

        ///======================= Main Route =======================

        GoRoute(
          name: RoutePath.dartScreen,
          path: RoutePath.dartScreen.addBasePath,
          pageBuilder: (context, state) => _buildPageWithAnimation(
              child: DartScreen(), state: state, disableAnimation: true),
        ),

        GoRoute(
          name: RoutePath.flutterScreen,
          path: RoutePath.flutterScreen.addBasePath,
          pageBuilder: (context, state) => _buildPageWithAnimation(
              child:  FlutterScreen(),
              state: state,
              disableAnimation: true),
        ),

        GoRoute(
          name: RoutePath.stateManagementScreen,
          path: RoutePath.stateManagementScreen.addBasePath,
          pageBuilder: (context, state) => _buildPageWithAnimation(
              child: const StateManagementScreen(),
              state: state,
              disableAnimation: true),
        ),

        GoRoute(
          name: RoutePath.bonusScreen,
          path: RoutePath.bonusScreen.addBasePath,
          pageBuilder: (context, state) => _buildPageWithAnimation(
              child: const BonusScreen(), state: state, disableAnimation: true),
        ),
      ]);

  static CustomTransitionPage _buildPageWithAnimation(
      {required Widget child,
      required GoRouterState state,
      bool disableAnimation = false}) {
    if (disableAnimation) {
      return CustomTransitionPage(
        key: state.pageKey,
        child: child,
        transitionDuration: Duration.zero, // Disable animation
        transitionsBuilder: (_, __, ___, child) => child, // No transition
      );
    } else {
      return CustomTransitionPage(
        key: state.pageKey,
        child: child,
        transitionDuration: const Duration(milliseconds: 600),
        transitionsBuilder: (context, animation, secondaryAnimation, child) {
          const begin = Offset(1.0, 0.0);
          const end = Offset.zero;
          var tween = Tween(begin: begin, end: end);
          var offsetAnimation = animation.drive(tween);
          return SlideTransition(
            position: offsetAnimation,
            child: child,
          );
        },
      );
    }
  }

  static GoRouter get route => initRoute;
}

/*
ЁЯСЙ GoRoute рж╣рж▓рзЛ ржмрзЗрж╕рж┐ржХ рж░рж╛ржЙржЯрж┐ржВ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░, ржпрж╛ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржПржХржЯрж┐ ржкрж╛рже (path) ржПржмржВ рждрж╛рж░ рж╕рж╛ржерзЗ рж╕ржВрж╢рзНрж▓рж┐рж╖рзНржЯ ржЙржЗржЬрзЗржЯ (screen/page) ржбрж┐ржлрж╛ржЗржи ржХрж░рждрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред
ЁЯСЙ ShellRoute ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ ржпржЦржи ржЖржкржирж╛ржХрзЗ ржПржХрж╛ржзрж┐ржХ рж╕рзНржХрзНрж░рж┐ржирзЗрж░ ржоржзрзНржпрзЗ ржПржХржЯрж┐ ржХржоржи UI (ржпрзЗржоржи: Bottom Navigation Bar, Drawer) рж░рж╛ржЦрждрзЗ рж╣рзЯред
ЁЯСЙ StatefulShellRoute рж╣рж▓ ShellRoute-ржПрж░ ржЙржирзНржиржд рж╕ржВрж╕рзНржХрж░ржг, ржпрзЗржЦрж╛ржирзЗ рж╕рзНржЯрзЗржЯ рж╕ржВрж░ржХрзНрж╖рж┐ржд ржерж╛ржХрзЗред ржПржЯрж┐ ржорзВрж▓ржд BottomNavigationBar ржмрж╛ TabBar ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп ржкрж╛рж░ржлрзЗржХрзНржЯред
ЁЯСЙ redirect ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ ржЗржЙржЬрж╛рж░ржХрзЗ ржПржХ ржкрж╛рже ржерзЗржХрзЗ ржЕржирзНржп ржкрж╛ржерзЗ ржкрж╛ржарж╛ржирзЛрж░ ржЬржирзНржп, ржпрзЗржоржи Authentication Checkingред
ЁЯСЙ name ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржирж╛ржо ржжрж┐рзЯрзЗ рж░рж╛ржЙржЯ ржбрж┐ржлрж╛ржЗржи ржХрж░рж╛ ржпрж╛рзЯ, ржпрж╛ ржкрж░ржмрж░рзНрждрзАрждрзЗ рж╕рж╣ржЬрзЗ ржирзЗржнрж┐ржЧрзЗрж╢ржирзЗрж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред
ЁЯСЙ ржХрзБрзЯрзЗрж░рж┐ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржкрж╛ржарж╛ржирзЛрж░ ржЬржирзНржп GoRouterState-ржПрж░ queryParameters ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред
ЁЯСЙ ржПржХрж╛ржзрж┐ржХ рж░рж╛ржЙржЯ ржирзЗрж╕рзНржЯрзЗржбржнрж╛ржмрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛рзЯ, ржпрж╛ Parent-Child ржирзЗржнрж┐ржЧрзЗрж╢ржирзЗрж░ ржЬржирзНржп ржжрж░ржХрж╛рж░рж┐ред
 */
